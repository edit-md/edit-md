services:
    # Reverse proxy for the frontend and other services
    nginx-ssl:
        build:
            context: ./dev/nginx/
        ports:
            - "80:80"
            - "443:443"
        environment:
            - ACCOUNT_SERVICE=http://account-service:8080
            - FRONTEND_SERVICE=http://host.docker.internal:8085
            - FILE_SERVICE=http://localhost
            - DOCUMENT_SERVICE=http://localhost
        networks:
            - nginx-net

    # Account service
    keydb-state:
        image: bitnami/keydb:6.3.4
        ports:
            - 6379:6379
        environment:
            - KEYDB_DATABASE=state
            - KEYDB_PASSWORD=1234
        networks:
            - account-service-net

    accounts-db:
        image: postgres:17.2
        restart: always
        # ports:
        #     - "5432:5432"
        environment:
            - POSTGRES_DB=${ACCOUNT_DB_NAME}
            - POSTGRES_USER=${ACCOUNT_DB_USER}
            - POSTGRES_PASSWORD=${ACCOUNT_DB_PASSWORD}
        volumes:
            - accounts-db:/var/lib/postgresql/data
            - ./dev/db/accounts/init:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - account-service-net

    account-service:
        build:
            context: ./services/account-service
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://accounts-db:5432/${ACCOUNT_DB_NAME}
            - SPRING_DATASOURCE_USERNAME=${ACCOUNT_DB_USER}
            - SPRING_DATASOURCE_PASSWORD=${ACCOUNT_DB_PASSWORD}
            - GITHUB_OAUTH_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID}
            - GITHUB_OAUTH_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET}
        depends_on:
            - accounts-db
        networks:
            - nginx-net
            - account-service-net

volumes:
    accounts-db:

networks:
    nginx-net:
        driver: bridge
    account-service-net:
        driver: bridge